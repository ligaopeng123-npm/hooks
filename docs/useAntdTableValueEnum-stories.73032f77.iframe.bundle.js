"use strict";(self.webpackChunk_gaopeng123_hooks=self.webpackChunk_gaopeng123_hooks||[]).push([[770],{"./stories/useAntdTableValueEnum.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>useAntdTableValueEnum_stories,demo:()=>demo});var react=__webpack_require__("./node_modules/.pnpm/react@17.0.2/node_modules/react/index.js"),utils_esm=__webpack_require__("./node_modules/.pnpm/@gaopeng123+utils@1.1.16-alpha.3/node_modules/@gaopeng123/utils/dist/utils.esm.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var cache={},dist=__webpack_require__("./node_modules/.pnpm/@storybook+blocks@7.4.2_74b3ggvk3akyhuq4eydyx3fqim/node_modules/@storybook/blocks/dist/index.mjs");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");const useAntdTableValueEnum_stories={title:"Example/useAntdTableValueEnum",component:function useAntdTableValueEnum(props){var _Object$assign=Object.assign({label:"label",value:"value"},props.fieldNames),label=_Object$assign.label,value=_Object$assign.value,_useState=(0,react.useState)({list:[],valueEnum:{}}),opt=_useState[0],setOpts=_useState[1];return(0,react.useEffect)((function(){props.cacheKey&&!(0,utils_esm.o8e)(cache[props.cacheKey])?setOpts(cache[props.cacheKey]):props.request().then((function(res){var _list=[],_enum={};res.forEach((function(item){_list.push(_extends({label:item[label],value:item[value]},item)),props.enumCallBack?_enum[item[value]]=_extends({text:item[label]},props.enumCallBack(item)):_enum[item[value]]={text:item[label]}}));var _opt={list:_list,valueEnum:_enum};props.cacheKey&&(cache[props.cacheKey]=_opt),setOpts(_opt)})).catch((function(){}))}),[]),opt},parameters:{layout:"centered",docs:{page:()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(dist.UG,{children:"# useAntdTableValueEnum\n\n`处理antd 表格 valueEnum`\n\n## Usage\n\n```tsx\nconst useEemo = () => {\n    return useAntdTableValueEnum({\n      \t// 需要一个数组\n        request: async () => {\n            return await demoList()\n        },\n      \t// 数组对应显示的值\n        fieldNames: {\n            label: 'name',\n            value: 'value'\n        },\n      \t// 是否需要缓存，码表数据基本不会变化 可以换成\n        cacheKey: 'useEemo',\n      \t// 是否需要多valueEnum数据再次处理\n      \tenumCallBack: (item)=> item\n    })\n}\n\nconst {list, valueEnum} = useEemo();\n```\n\n\n\n"})})}},tags:["autodocs"],argTypes:{}},demo={args:{},render:()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:"useAntdTableValueEnum"})};demo.parameters={...demo.parameters,docs:{...demo.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: () => {\n    return <>useAntdTableValueEnum</>;\n  }\n}",...demo.parameters?.docs?.source}}};const __namedExportsOrder=["demo"]}}]);